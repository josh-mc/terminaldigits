count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
set.seed(490)
x <- rnorm(30, mean = 14, sd = 14)
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- sam - int * 10
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- abs(sort(unique(dec)))
u_sam <- sort(unique(sam))
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
u_dec
set.seed(490)
x <- rnorm(30, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- sam - int * 10
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(abs(unique(dec)))
u_sam <- sort(unique(sam))
test_that("observed_vec gives same result as in R", {
set.seed(490)
x <- rnorm(30, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- sam - int * 10
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(abs(unique(dec)))
u_sam <- sort(unique(sam))
#This creates a vector of counts for all possible cells
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
set.seed(490)
x <- rnorm(30, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- sam - int * 10
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(abs(unique(dec)))
u_sam <- sort(unique(sam))
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
options(max.print=10000)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
u_int
u_dec
u_sam
options(max.print=100000)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
set.seed(490)
x <- rnorm(30, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- as.integer(sam - int * 10)
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(abs(unique(dec)))
u_sam <- sort(unique(sam))
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
str(u_int)
str(u_sam)
str(u_dec)
dec <- as.integer(sam - int * 10)
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(abs(unique(dec)))
u_sam <- sort(unique(sam))
str(u_dec)
dec
u_dec <- sort(unique(abs(dec)))
u_dec
set.seed(490)
x <- rnorm(30, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- as.integer(sam - int * 10)
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(unique(abs(dec)))
u_sam <- sort(unique(sam))
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
set.seed(490)
x <- rnorm(10, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- as.integer(sam - int * 10)
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(unique(abs(dec)))
u_sam <- sort(unique(sam))
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
test_that("observed_vec gives same result as in R", {
set.seed(490)
x <- rnorm(10, mean = 14, sd = 14)
#For one decimal
sam <- as.integer(x * 10)
int <- as.integer(x)
dec <- as.integer(sam - int * 10)
tab_sam <- table(sam)
tab_int <- table(int)
tab_dec <- table(dec)
u_int <- sort(unique(int))
u_dec <- sort(unique(abs(dec)))
u_sam <- sort(unique(sam))
#This creates a vector of counts for all possible cells
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
u_sam <- c(-70, -40, 11, 12, 180)
tab_sam c(5, 5, 5, 3, 3)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
tab_sam <- c(5, 5, 5, 3, 3)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
u_dec
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
u_sam <- c(-70, -40, 11, 12, 180)
tab_sam <- c(5, 5, 5, 3, 3)
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
test_that("observed_vec gives same result as in R", {
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
u_sam <- c(-70, -40, 11, 12, 180)
tab_sam <- c(5, 5, 5, 3, 3)
#This creates a vector of counts for all possible cells
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
a
b
tab_sam[18]
tab_sam
test_that("observed_vec gives same result as in R", {
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
tab_sam <- table(c(-70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
tab_sam <- c(5, 5, 5, 3, 3)
#This creates a vector of counts for all possible cells
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
tab_sam <- table(c(-70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
tab_sam <- c(5, 5, 5, 3, 3)
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
num <- as.character((i * 10) + j)
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
a
b
View(observed)
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
if(i >= 0) {
num <- as.character((i * 10) + j)
}
else {
num <- as.character((i * 10) - j)
}
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
a
View(observed)
test_that("observed_vec gives same result as in R", {
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
tab_sam <- table(c(-70, -71, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
#This creates a vector of counts for all possible cells
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
if(i >= 0) {
num <- as.character((i * 10) + j)
}
else {
num <- as.character((i * 10) - j)
}
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
tab_sam <- table(c(-70, -71, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
observed <- data.frame(v = 1:(length(u_int) * length(u_dec)))
count <- 1
for(i in u_int)  {
for(j in u_dec)  {
if(i >= 0) {
num <- as.character((i * 10) + j)
}
else {
num <- as.character((i * 10) - j)
}
observed$num[count] <- num
observed$value[count] <- as.integer(tab_sam[num])
if(is.na(observed$value[count])) {
observed$value[count] <- 0
}
count <- count + 1
}}
a <- observed$value
a
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
b
a
View(observed)
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
cppFunction('IntegerVector char_cpp(IntegerVector y) {
return y.sort(true);
}')
char_cpp(c(1, 2, 3, 4))
load_all()
load_all()
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
test_that("observed_vec gives same result as in R", {
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
a
b
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
a
b
test_that("observed_vec gives same result as in R", {
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
u_sam <- c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
test_that("observed_vec gives same result as in R", {
u_int <- c(-7, -4, 1, 18)
u_dec <- c(0, 1, 2)
u_sam <- c(-71, -70, -40, 11, 12, 180)
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
a
b
tab_sam
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
a
b
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 5, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 6, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 6, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 6, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
test_that("observed_vec gives same result as in R", {
u_int <- as.integer(c(-7, -4, 1, 18))
u_dec <- as.integer(c(0, 1, 2))
u_sam <- as.integer(c(-71, -70, -40, 11, 12, 180))
tab_sam <- table(c(-71, -70, -70, -40, 11, 11, 12, 12, 12, 12, 12, 12, 180))
a <- c(0, 1, 2, 0, 0, 1, 0, 2, 6, 1, 0, 0)
b <- observed_vec(u_int, u_dec, u_sam, tab_sam)
expect_equal(a, b)
})
load_all()
load_all()
